apply plugin: 'java-library'
apply plugin: "maven-publish"


compileJava {
    /*
     *  Annotation processor arguments:
     *   umdb_room_out - Destination directory for the generated room version of database and DAO classes
     */
    options.compilerArgs += [
            "-Aumdb_room_out=" + rootProject.file("lib-database-android/build/generated/source/umdbprocessor").getAbsolutePath(),
            "-Aumdb_jdbc_out=" + rootProject.file("lib-database-jdbc/build/generated/source/umdbprocessor").getAbsolutePath(),
            "-Aumdb_retrofit_out=" + rootProject.file("lib-database-retrofitrepository/build/generated/source/umdbprocessor").getAbsolutePath(),
            "-Aumdb_jersey_res_out=" + rootProject.file("app-rest-server/build/generated/source/umdbprocessor").getAbsolutePath(),
            "-parameters"
    ]

    //Due to a bug, the JDK8 annotation processor provides incorrect parameter names, thus we need
    // to use JDK9+ to run the annotation processor https://bugs.openjdk.java.net/browse/JDK-8191074
    if(JavaVersion.current() == JavaVersion.VERSION_1_8) {
        options.fork = true
        options.forkOptions.executable = rootProject.ext.localProperties["javac.9plus"]
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    compileOnly project(":lib-database-entities")
    compileOnly project(":lib-database-runtime-core-compileonly")
    implementation project(':lib-database-runtime')
    implementation project(":lib-util")

    annotationProcessor project(':lib-database-annotation-processor')

    testImplementation "junit:junit:$version_junit"
    testImplementation "javax.ws.rs:javax.ws.rs-api:2.1"
    testRuntimeOnly "org.xerial:sqlite-jdbc:$version_sqlite_jdbc"
    testRuntimeOnly "com.github.h-thurow:simple-jndi:$version_simple_jndi"
    testRuntimeOnly "org.apache.commons:commons-pool2:$version_apache_commons_pool2"

    testImplementation project(":lib-database-jdbc")
    testImplementation project(":lib-database-entities")
    testImplementation project(":lib-database-runtime")
    testImplementation project(':lib-database-runtime-jdbc')
    testImplementation project(':app-rest-server')

    //Jersey dependencies - used to run the test server
    testImplementation "org.glassfish.jersey.core:jersey-server:$version_jersey"
    testImplementation "org.glassfish.jersey.containers:jersey-container-servlet:$version_jersey"
    testImplementation "org.glassfish.jersey.core:jersey-client:$version_jersey"
    testImplementation "org.glassfish.jersey.inject:jersey-hk2:$version_jersey"
    testImplementation "org.glassfish.jersey.media:jersey-media-json-jackson:$version_jersey"
    testImplementation "org.glassfish.jersey.containers:jersey-container-grizzly2-http:$version_jersey"
    testImplementation "org.glassfish.jersey.media:jersey-media-multipart:$version_jersey"
}

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
}


sourceCompatibility = "1.8"
targetCompatibility = "1.8"

publishing {
    publications {
        maven(MavenPublication) {
            groupId rootProject.group
            artifactId project.name
            version rootProject.version

            from components.java

            artifact sourceJar {
                classifier = 'sources'
            }
        }
    }

    repositories {
        maven {
            url rootProject.ext.buildConfigProperties['repo.dir']
        }
    }
}
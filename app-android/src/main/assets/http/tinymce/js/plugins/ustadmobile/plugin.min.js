(function() {
    const multipleChoiceIndex = 0;
    const fillTheBlanksIndex = 1;
    const questionTemplatesDir = "templates/";

    tinymce.PluginManager.add( 'ustadmobile', function( editor ){

        editor.on("preInit", function () {
            console.log("hit on pre init")
            editor.parser.addAttributeFilter("data-um-widget", function(nodes, name) {
                for(node in nodes) {
                    if(!nodes.hasOwnProperty(node))
                        continue;
                    const content = tinymce.html.Serializer().serialize(nodes[node]);
                    const widget = QuestionWidget.handleQuestionNode(content);
                    const finalWidget = widget.editOn();
                    const tempNode =  tinymce.html.DomParser().parse($(finalWidget).prop('outerHTML'));
                    nodes[node].replace(tempNode);

                }
            });

        });




        var questionTypeList = ['Multiple Choice','Fill the blanks','Editor Off','Editor On'];
        var questionTemplateList = ['question-multiple-choice.html','question-fill-the-blanks.html']

        var items = [];

        tinymce.each(questionTypeList, function(questionType){
            const itemId = questionType.replace(/\s/g,"-").toLowerCase();
            items.push({
                text: questionType,
                id: itemId,
                onclick: function(){

                    if(questionType === 'Multiple Choice' || questionType === 'Fill the blanks'){
                        const nextQuestionId = QuestionWidget.getNextQuestionId();
                        const templatePage = questionType == questionTypeList[multipleChoiceIndex]
                            ? questionTemplateList[multipleChoiceIndex] : (questionType === questionTypeList[fillTheBlanksIndex]
                                ? questionTemplateList[fillTheBlanksIndex]: "");
                        $.ajax({url: questionTemplatesDir+templatePage, success: function(templateHtmlContent){
                                const templateContentWithId = $(templateHtmlContent).attr("id",nextQuestionId);
                                const questionContent = $(templateContentWithId).prop('outerHTML');
                                tinymce.activeEditor.execCommand('mceInsertContent', false, questionContent,{format: 'raw'});
                            }});
                    }else{

                        const choices = tinymce.activeEditor.dom.select('div.question-choice');
                        const questionMultiBody = tinymce.activeEditor.dom.select('div.multichoice');
                        const retryOption= tinymce.activeEditor.dom.select('div.select-option');
                        const answerHolder = tinymce.activeEditor.dom.select('div.fill-blanks');
                        const choiceFillAnswer = tinymce.activeEditor.dom.select('div.question-choice-answer');
                        const retryButton = tinymce.activeEditor.dom.select('.question-retry-btn');
                        const choiceFeedback = tinymce.activeEditor.dom.select('div.question-choice-feedback');
                        const questionAnswer = tinymce.activeEditor.dom.select('div.question-answer');

                        if(questionType === 'Editor Off'){
                            QuestionWidget.handleEditOff();
                            console.log(tinymce.activeEditor.dom.select('.retry-btn'));
                            tinymce.activeEditor.dom.remove(tinymce.activeEditor.dom.select('br'));
                            tinymce.activeEditor.dom.remove(tinymce.activeEditor.dom.select('label'));
                            tinymce.activeEditor.dom.remove(tinymce.activeEditor.dom.select('button.add-choice'));

                            tinymce.activeEditor.dom.addClass(
                                tinymce.activeEditor.dom.select('div.question'),'card col-sm-12 col-lg-12 default-padding-bottom default-margin-bottom default-padding-top');
                            tinymce.activeEditor.dom.addClass(
                                tinymce.activeEditor.dom.select('div.question-choice'),'alert alert-secondary');
                            tinymce.activeEditor.dom.addClass(
                                tinymce.activeEditor.dom.select('[data-um-preview="main"]'),'preview-main default-margin-top');
                            tinymce.activeEditor.dom.addClass(
                                tinymce.activeEditor.dom.select('[data-um-preview="alert"]'),'preview-alert default-margin-top');
                            tinymce.activeEditor.dom.addClass(
                                tinymce.activeEditor.dom.select('[data-um-preview="support"]'),'preview-support default-margin-top');


                            //Multiple choice choices
                            tinymce.activeEditor.dom.addClass(choices,'question-choice-pointer');
                            tinymce.activeEditor.dom.removeClass(choices,'default-margin-top');

                            tinymce.activeEditor.dom.removeClass(questionMultiBody,'default-margin-top');
                            tinymce.activeEditor.dom.addClass(questionMultiBody,'default-margin-bottom');

                            tinymce.activeEditor.dom.addClass(questionAnswer,'default-margin-bottom');

                            //Hide retry option selection
                            tinymce.activeEditor.dom.removeClass(retryOption,'show-element');
                            tinymce.activeEditor.dom.addClass(retryOption,'hide-element');

                            //Hide fill the blanks answer
                            tinymce.activeEditor.dom.removeClass(answerHolder,'show-element');
                            tinymce.activeEditor.dom.addClass(answerHolder,'hide-element');


                            //Hide choice correct answer
                            tinymce.activeEditor.dom.removeClass(choiceFillAnswer,'show-element');
                            tinymce.activeEditor.dom.addClass(choiceFillAnswer,'hide-element');

                            //Hide retry button
                            tinymce.activeEditor.dom.removeClass(retryButton,'show-element');
                            tinymce.activeEditor.dom.addClass(retryButton,'hide-element');

                            //Hide multiple choice choice feedback
                            tinymce.activeEditor.dom.removeClass(choiceFeedback,'show-element');
                            tinymce.activeEditor.dom.addClass(choiceFeedback,'hide-element');
                        }else{
                            tinymce.activeEditor.dom.removeClass(
                                tinymce.activeEditor.dom.select('div.question'),'card col-sm-12 col-lg-12 default-padding-bottom default-margin-bottom default-padding-top');
                            tinymce.activeEditor.dom.removeClass(
                                tinymce.activeEditor.dom.select('div.question-choice'),'alert alert-secondary');
                            tinymce.activeEditor.dom.removeClass(
                                tinymce.activeEditor.dom.select('[data-um-preview="main"]'),'preview-main default-margin-top');
                            tinymce.activeEditor.dom.removeClass(
                                tinymce.activeEditor.dom.select('[data-um-preview="alert"]'),'preview-alert default-margin-top');
                            tinymce.activeEditor.dom.removeClass(
                                tinymce.activeEditor.dom.select('[data-um-preview="support"]'),'preview-support default-margin-top');

                            //Multiple choice choices
                            tinymce.activeEditor.dom.removeClass(choices,'question-choice-pointer');
                            tinymce.activeEditor.dom.addClass(choices,'default-margin-top');

                            tinymce.activeEditor.dom.removeClass(questionMultiBody,'default-margin-top');
                            tinymce.activeEditor.dom.addClass(questionMultiBody,'default-margin-bottom');
                            tinymce.activeEditor.dom.removeClass(questionAnswer,'default-margin-bottom');

                            //Hide retry option selection
                            tinymce.activeEditor.dom.addClass(retryOption,'show-element');
                            tinymce.activeEditor.dom.removeClass(retryOption,'hide-element');

                            //Hide fill the blanks answer
                            tinymce.activeEditor.dom.addClass(answerHolder,'show-element');
                            tinymce.activeEditor.dom.removeClass(answerHolder,'hide-element');


                            //Hide choice correct answer
                            tinymce.activeEditor.dom.addClass(choiceFillAnswer,'show-element');
                            tinymce.activeEditor.dom.removeClass(choiceFillAnswer,'hide-element');


                            //Hide multiple choice choice feedback
                            tinymce.activeEditor.dom.addClass(choiceFeedback,'show-element');
                            tinymce.activeEditor.dom.removeClass(choiceFeedback,'hide-element');
                        }

                    }
                }
            });
        });


        /**
         * Add button to the toolbar with drop down functionality
         */
        editor.addButton('ustadmobile', {
            type: 'menubutton',
            text: 'Ustadmobile',
            id: "ustadmobile-menu",
            menu: items
        });


    });
})();
let UmEditorCore=function(){},editorConfig=null,testEnvironment=!1,directionality="ltr";const localeDir="locale/",questionTemplatesDir="templates/",indexMultipleChoiceWidget=0,indexFillTheBlanksWidget=1,longerEventTimeout=500,shorterEventTimeout=100,averageEventTimeout=300;UmEditorCore.onInit=((locale="en",dir="ltr",showToolbar=!1,testEnv=!1)=>{testEnvironment=testEnv,directionality=dir,$($.find(".um-editor")).attr("dir",dir),"rtl"===dir?$($.find(".float-right")).removeClass("float-right").addClass("float-left"):$($.find(".float-left")).removeClass("float-left").addClass("float-right");const langCode=UmEditorCore.prototype.getLanguageCodeFromLocale(locale);UmWidgetManager.loadPlaceHolderByLanguageCode(langCode,testEnv),setTimeout(()=>{UmWidgetManager.handleWidgetListeners()},300),editorConfig={selector:".um-editable",directionality:dir,height:$(window).height(),menubar:showToolbar,statusbar:showToolbar,inline:!0,force_br_newlines:!1,force_p_newlines:!0,forced_root_block:"",plugins:["directionality","lists"],toolbar:showToolbar,extended_valid_elements:"span[*],i[*]",init_instance_callback:ed=>{ed.on("Paste",e=>{e.stopPropagation(),e.preventDefault();const widget=(e.clipboardData||window.clipboardData).getData("Text");$(widget).hasClass("question")?UmEditorCore.prototype.insertWidgetNode(widget):UmEditorCore.insertContentRaw(widget)})}},showToolbar&&(editorConfig.toolbar=["undo redo | bold italic underline strikethrough superscript subscript | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | fontsizeselect"]),$(document).on("click",".um-editable",()=>{tinymce.init(editorConfig)})}),UmEditorCore.enableEditingMode=(()=>{$($.find("[data-um-widget]")).each((index,widget)=>{UmEditorCore.prototype.processWidgetNode(widget,!1)}),UmEditorCore.requestFocusFromElementWithId($($.find(".um-editor"))),setTimeout(()=>{try{UmEditor.onEditingModeOn(JSON.stringify({action:"onEditingModeOn",directionality:directionality,content:"true"}))}catch(e){UmEditorCore.prototype.logUtil("onEditingModeOn: "+e)}},300),UmEditorCore.prototype.registerObservers()}),UmEditorCore.disableEditingMode=(()=>{const editorWrapper=$(".um-editor"),previewContent=UmWidgetManager.preparingPreview(editorWrapper.html());editorWrapper.html("").html(previewContent),UmWidgetManager.handleWidgetListeners(!1)}),UmEditorCore.prototype.scrollToElement=(element=>{element&&element.scrollIntoView&&element.scrollIntoView({behavior:"smooth",block:"center"})}),UmEditorCore.requestFocusFromElementWithId=(element=>{(element=$(element).find(".um-editable:first")).click(),setTimeout(()=>{tinyMCE.activeEditor.execCommand("mceFocus",!1,element.attr("id"))},300)}),UmEditorCore.base64Encode=(content=>btoa(encodeURIComponent(content).replace(/%([0-9A-F]{2})/g,function(match,p1){return String.fromCharCode(parseInt(p1,16))}))),UmEditorCore.base64Decode=(content=>decodeURIComponent(Array.prototype.map.call(atob(content),function(c){return"%"+("00"+c.charCodeAt(0).toString(16)).slice(-2)}).join(""))),UmEditorCore.prototype.getLanguageCodeFromLocale=(locale=>{let languageCode=locale.split("_");return languageCode.length>0&&(languageCode=languageCode[0]),languageCode}),UmEditorCore.prototype.registerObservers=(()=>{try{let contentWatcherFilters={attributes:!0,characterData:!0,childList:!0,subtree:!0,attributeOldValue:!0,characterDataOldValue:!0};new MutationObserver(()=>{setTimeout(()=>{UmEditorCore.prototype.checkActivatedControls()},300);const previewContent=JSON.stringify({action:"onSaveContent",directionality:directionality,content:UmEditorCore.base64Encode(UmWidgetManager.preparingPreview($(".um-editor").html()))});try{UmEditor.onSaveContent(previewContent)}catch(e){UmEditorCore.prototype.logUtil("onContentChanged:",e)}}).observe(document.querySelector(".um-editor"),contentWatcherFilters)}catch(e){UmEditorCore.prototype.logUtil("registerObservers",e)}}),UmEditorCore.insertContentRaw=(content=>{tinyMCE.activeEditor.execCommand("mceInsertContent",!1,content)}),UmEditorCore.prototype.setCursor=((element=null,isRoot)=>{isRoot?UmEditorCore.prototype.setCursorPositionToLastEditableElement(element):UmEditorCore.prototype.setCursorToAnyEditableElement(element)}),UmEditorCore.prototype.setCursorPositionToLastEditableElement=(rootElement=>{null==rootElement&&(rootElement=document.getElementsByClassName("um-editor"));const range=document.createRange(),selection=window.getSelection();range.selectNodeContents(rootElement),range.collapse(!1),selection.removeAllRanges(),selection.addRange(range),rootElement.focus(),range.detach(),rootElement.scrollTop=rootElement.scrollHeight,$(document).height()>$(window).height()&&$("html, body").animate({scrollTop:$(document).height()-$(window).height()})}),UmEditorCore.prototype.setCursorToAnyEditableElement=(element=>{try{element=null===element?$(".um-editor").children().get(0):element;const range=document.createRange(),sel=window.getSelection();range.setStart(element,0),range.collapse(!1),sel.removeAllRanges(),sel.addRange(range),element.focus()}catch(e){UmEditorCore.prototype.logUtil("setCursorToAnyEditableElement",e)}}),UmEditorCore.prototype.logUtil=((tag,message,debug=!0)=>{debug&&console.log(tag,message)}),UmEditorCore.insertMediaContent=((source,mimeType)=>{let mediaContent=null;mediaContent=mimeType.includes("image")?"<img src='"+source+"' class='.img-fluid'/>":mimeType.includes("audio")?'<audio controls controlsList="nodownload" class="media-audio"><source src="'+source+'" type="'+mimeType+'"></audio>':'<video controls controlsList="nodownload" preload="meta" class="media-video"><source src="'+source+'" type="'+mimeType+'"></video>',mediaContent+="<p><br/></p>";let currentElement=$(tinymce.activeEditor.selection.getNode());currentElement.is("p")?$(currentElement).after(mediaContent):UmEditorCore.insertContentRaw(mediaContent);const parentChildren=$($(currentElement.parent()).children()).last().get(0);UmEditorCore.prototype.setCursor(parentChildren,!1),UmEditorCore.prototype.scrollToElement(parentChildren)}),UmEditorCore.insertMultipleChoiceWidget=(()=>{UmEditorCore.prototype.insertWidgetTemplate(0,testEnvironment)}),UmEditorCore.insertFillTheBlanksWidget=(()=>{UmEditorCore.prototype.insertWidgetTemplate(1,testEnvironment)}),UmEditorCore.prototype.insertWidgetTemplate=((questionTypeIndex,isTest=!1)=>{const nextQuestionId=UmWidgetManager.QUESTION_ID_TAG+UmWidgetManager.getNextUniqueId(),nextChoiceId=UmWidgetManager.CHOICE_ID_TAG+UmWidgetManager.getNextUniqueId(),templateUrl=(isTest?"/":"")+"templates/"+["template-qn-multiple-choice.html","template-qn-fill-the-blanks.html"][questionTypeIndex];$.ajax({url:templateUrl,success:templateHtmlContent=>{let widgetNode=$(templateHtmlContent).attr("id",nextQuestionId);$(widgetNode).find(".question-choice").attr("id",nextChoiceId),widgetNode=$(widgetNode).prop("outerHTML"),UmEditorCore.prototype.insertWidgetNode($(widgetNode).get(0))}})}),UmEditorCore.prototype.processWidgetNode=((widgetNode,newWidget)=>{$(widgetNode).attr("id")||$(widgetNode).attr("id",UmWidgetManager.EXTRA_CONTENT_ID_TAG+UmWidgetManager.getNextUniqueId());const widgetManager=UmWidgetManager.handleWidgetNode(widgetNode,newWidget);return widgetManager.switchEditingModeOn(),widgetManager.widget}),UmEditorCore.prototype.insertWidgetNode=(widgetNode=>{const activeNode=tinyMCE.activeEditor.selection.getNode(),closestExtraContent=$(activeNode).closest("div div.extra-content"),closestQuestion=$(activeNode).closest("div div.question"),isInQuestion=$(closestQuestion).is("div"),isInExtraContent=$(closestExtraContent).is("div");let currentWidget=isInQuestion?closestQuestion:isInExtraContent?closestExtraContent:null;if(isInExtraContent)currentWidget=closestExtraContent;else if(isInQuestion){let found=!1;$($.find("[data-um-widget]")).each((index,widget)=>{if(found)return currentWidget=widget,!1;found=$(closestQuestion).attr("id")==$(widget).attr("id")})}widgetNode=UmEditorCore.prototype.processWidgetNode(widgetNode,!0),$(currentWidget).after(widgetNode);const extraContent=$(UmWidgetManager.EXTRA_CONTENT_WIDGET);extraContent.attr("id",UmWidgetManager.EXTRA_CONTENT_ID_TAG+UmWidgetManager.getNextUniqueId()),$(widgetNode).after(extraContent.get(0)),$(".um-editor").find("p.pg-break").remove(),UmWidgetManager.handleEditableContent(!0),UmWidgetManager.handleWidgetListeners(!0),UmEditorCore.requestFocusFromElementWithId($(widgetNode).get(0)),UmEditorCore.prototype.scrollToElement($($(UmWidgetManager.EXTRA_CONTENT_WIDGET).find("p")).get(0))}),UmEditorCore.prototype.checkActivatedControls=(()=>{const commandStatus=[];for(let command in UmEditorCore.formattingCommandList){if(!UmEditorCore.formattingCommandList.hasOwnProperty(command))continue;const commandString=UmEditorCore.formattingCommandList[command],commandState={};let status=null;status="FontSize"===commandString?tinyMCE.activeEditor.queryCommandValue(commandString).replace("px",""):"mceDirectionLTR"===commandString?"ltr"===UmEditorCore.prototype.getNodeDirectionality():"mceDirectionRTL"===commandString?"rtl"===UmEditorCore.prototype.getNodeDirectionality():UmEditorCore.prototype.checkCommandState(commandString),commandState.command=commandString,commandState.status=null!==status&&status,commandStatus.push(commandState)}try{UmEditor.onControlsStateChanged(JSON.stringify({action:"onActiveControlCheck",directionality:"",content:btoa(JSON.stringify(commandStatus))}))}catch(e){UmEditorCore.prototype.logUtil("checkActivatedControls",e)}}),UmEditorCore.formattingCommandList=["Bold","Underline","Italic","Strikethrough","Superscript","Subscript","JustifyCenter","JustifyLeft","JustifyRight","JustifyFull","Indent","Outdent","JustifyLeft","JustifyCenter","JustifyRight","JustifyFull","InsertUnorderedList","InsertOrderedList","mceDirectionLTR","mceDirectionRTL","FontSize"],UmEditorCore.prototype.checkCommandState=(commandIdentifier=>tinyMCE.activeEditor.queryCommandState(commandIdentifier)),UmEditorCore.prototype.checkCommandValue=(commandIdentifier=>null!=tinyMCE.activeEditor.queryCommandValue(commandIdentifier)),UmEditorCore.setFontSize=(fontSize=>{UmEditorCore.executeCommand("FontSize",fontSize+"pt");const activeFont=tinyMCE.activeEditor.queryCommandValue("FontSize"),isActive=UmEditorCore.prototype.checkCommandState("FontSize");return{action:"activeControl",content:btoa("FontSize-"+isActive+"-"+activeFont)}}),UmEditorCore.editorActionUndo=(()=>{UmEditorCore.executeCommand("Undo",null),UmEditorCore.prototype.checkCommandState("Undo")}),UmEditorCore.editorActionRedo=(()=>{UmEditorCore.executeCommand("Redo",null),UmEditorCore.prototype.checkCommandState("Redo")}),UmEditorCore.textDirectionLeftToRight=(()=>{UmEditorCore.executeCommand("mceDirectionLTR");const isActive="ltr"===UmEditorCore.prototype.getNodeDirectionality();return{action:"activeControl",content:btoa("mceDirectionLTR-"+isActive)}}),UmEditorCore.textDirectionRightToLeft=(()=>{UmEditorCore.executeCommand("mceDirectionRTL");const isActive="rtl"===UmEditorCore.prototype.getNodeDirectionality();return{action:"activeControl",content:btoa("mceDirectionRTL-"+isActive)}}),UmEditorCore.paragraphUnOrderedListFormatting=(()=>{UmEditorCore.executeCommand("InsertUnorderedList",null);const isActive=UmEditorCore.prototype.checkCommandState("InsertUnorderedList");return{action:"activeControl",content:btoa("InsertUnorderedList-"+isActive)}}),UmEditorCore.paragraphOrderedListFormatting=(()=>{UmEditorCore.executeCommand("InsertOrderedList",null);const isActive=UmEditorCore.prototype.checkCommandState("InsertOrderedList");return{action:"activeControl",content:btoa("InsertOrderedList-"+isActive)}}),UmEditorCore.paragraphLeftJustification=(()=>{UmEditorCore.executeCommand("JustifyLeft",null);const isActive=UmEditorCore.prototype.checkCommandValue("JustifyLeft");return{action:"activeControl",content:btoa("JustifyLeft-"+isActive)}}),UmEditorCore.paragraphRightJustification=(()=>{UmEditorCore.executeCommand("JustifyRight",null);const isActive=UmEditorCore.prototype.checkCommandValue("JustifyRight");return{action:"activeControl",content:btoa("JustifyRight-"+isActive)}}),UmEditorCore.paragraphFullJustification=(()=>{UmEditorCore.executeCommand("JustifyFull",null);const isActive=UmEditorCore.prototype.checkCommandValue("JustifyFull");return{action:"activeControl",content:btoa("JustifyFull-"+isActive)}}),UmEditorCore.paragraphCenterJustification=(()=>{UmEditorCore.executeCommand("JustifyCenter",null);const isActive=UmEditorCore.prototype.checkCommandValue("JustifyCenter");return{action:"activeControl",content:btoa("JustifyCenter-"+isActive)}}),UmEditorCore.paragraphOutDent=(()=>{UmEditorCore.executeCommand("Outdent",null);const isActive=UmEditorCore.prototype.checkCommandValue("Outdent");return{action:"activeControl",content:btoa("Outdent-"+isActive)}}),UmEditorCore.paragraphIndent=(()=>{UmEditorCore.executeCommand("Indent",null);const isActive=UmEditorCore.prototype.checkCommandValue("Indent");return{action:"activeControl",content:btoa("Indent-"+isActive)}}),UmEditorCore.textFormattingBold=(()=>{UmEditorCore.executeCommand("Bold",null);const isActive=UmEditorCore.prototype.checkCommandState("Bold");return{action:"activeControl",content:btoa("Bold-"+isActive)}}),UmEditorCore.textFormattingItalic=(()=>{UmEditorCore.executeCommand("Italic",null);const isActive=UmEditorCore.prototype.checkCommandState("Italic");return{action:"activeControl",content:btoa("Italic-"+isActive)}}),UmEditorCore.textFormattingUnderline=(()=>{UmEditorCore.executeCommand("Underline",null);const isActive=UmEditorCore.prototype.checkCommandState("Underline");return{action:"activeControl",content:btoa("Underline-"+isActive)}}),UmEditorCore.textFormattingStrikeThrough=(()=>{UmEditorCore.executeCommand("Strikethrough",null);const isActive=UmEditorCore.prototype.checkCommandState("Strikethrough");return{action:"activeControl",content:btoa("Strikethrough-"+isActive)}}),UmEditorCore.textFormattingSuperScript=(()=>{UmEditorCore.executeCommand("Superscript",null);const isActive=UmEditorCore.prototype.checkCommandState("Superscript");return{action:"activeControl",content:btoa("Superscript-"+isActive)}}),UmEditorCore.textFormattingSubScript=(()=>{UmEditorCore.executeCommand("Subscript",null);const isActive=UmEditorCore.prototype.checkCommandState("Subscript");return{action:"activeControl",content:btoa("Subscript-"+isActive)}}),UmEditorCore.checkCurrentActiveControls=(commandValue=>{const isActive=UmEditorCore.prototype.checkCommandState(commandValue);return{action:"activeControl",content:btoa(commandValue+"-"+isActive)}}),UmEditorCore.executeCommand=((command,args)=>{try{tinyMCE.activeEditor.execCommand(command,!1,args)}catch(e){UmEditorCore.prototype.logUtil("executeCommand: "+e)}}),UmEditorCore.prototype.getNodeDirectionality=(()=>{try{if(null!=tinyMCE.activeEditor){const currentNode=$(tinyMCE.activeEditor.selection.getNode());return getComputedStyle(currentNode.get(0)).direction}}catch(e){UmEditorCore.prototype.logUtil("getNodeDirectionality ",e)}return $($.find(".um-editor")).attr("dir")}),UmEditorCore.getContent=(()=>tinyMCE.activeEditor.getContent());